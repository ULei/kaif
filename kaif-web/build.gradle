buildscript {
  ext {
    springBootVersion = '1.5.2.RELEASE'
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
  }
}


/** spring boot begin **/
apply plugin: 'org.springframework.boot'

bootRepackage {
  mainClass = 'io.kaif.Application'
}

springBoot {
  mainClass = 'io.kaif.Application'
  executable = true
}

// hack to make `gradle bootRun` start with dev mode
tasks.withType(org.springframework.boot.gradle.run.BootRunTask) {
  systemProperty('spring.profiles.active', 'dev')
}

/** spring boot end **/

/** dart configuration begin **/

def dartDist = "dart_dist"

def getDartPub() {
  def envDart = System.env['dart_sdk_home']
  def propDart = System.properties['dart_sdk_home']
  if (envDart == null && propDart == null) {
    return null;
  }
  if (envDart != null) {
    return "${System.env['dart_sdk_home']}/bin/pub"
  }
  return "${System.properties['dart_sdk_home']}/bin/pub"
}

task buildDart(dependsOn: classes, type: Exec) {
  doFirst {
    if (getDartPub() == null) {
      throw new IllegalStateException("missing 'dart_sdk_home' environment var., please install dart and set env first");
    }
  }
  workingDir "src/main/dart"
  commandLine getDartPub(), "build", "-o", "${buildDir}/${dartDist}"
}

task pubServe(type: Exec) {
  doFirst {
    if (getDartPub() == null) {
      throw new IllegalStateException("missing 'dart_sdk_home' environment var., please install dart and set env first");
    }
  }
  workingDir "src/main/dart"
  commandLine getDartPub(), "serve", "--port", "15980", "--hostname", "localhost", "--force-poll"
}

jar.dependsOn buildDart

/** dart configuration end **/

jar {
  baseName = 'kaif-web'
  from("${buildDir}/$dartDist") {
    exclude "less_link"
    into "static"
  }
  exclude "static/less"
}

dependencies {
  compile("org.springframework.boot:spring-boot-starter-aop")

  compile("org.springframework.boot:spring-boot-starter-jdbc")
  compile("org.springframework.boot:spring-boot-starter-freemarker")
  compile("org.springframework.boot:spring-boot-starter-web")

  compile("org.springframework.boot:spring-boot-starter-tomcat")

  // compile("org.springframework.boot:spring-boot-starter-social-twitter")
  compile("org.springframework.boot:spring-boot-starter-actuator")
  testCompile("org.springframework.boot:spring-boot-starter-test")

  //upgrade spring should bound json-path version too
  testCompile('com.jayway.jsonpath:json-path:2.2.0')

  compile 'org.springframework.security:spring-security-crypto:4.2.2.RELEASE'

  compile('org.postgresql:postgresql:42.0.0') {
    exclude group: 'org.slf4j'
  }

  compile 'com.google.guava:guava:21.0'

  // postgresql driver not better fit HikariCP
  // compile 'com.zaxxer:HikariCP:2.3.0'

  // note that guava depends on jsr305 1.3.9
  compile 'com.google.code.findbugs:jsr305:3.0.1'
  compile 'javax.inject:javax.inject:1'

  compile 'com.fasterxml.jackson.module:jackson-module-afterburner:2.8.7'
  compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.7'

  // webjars
  compile 'org.webjars:font-awesome:4.2.0'
  compile 'org.webjars:yui-pure:0.5.0'

  // aws will depends on jackson/joda/httpclient
  compile 'com.amazonaws:aws-java-sdk-ses:1.11.86'
  compile 'com.sun.mail:javax.mail:1.5.6'

  compile 'org.ocpsoft.prettytime:prettytime:3.2.7.Final'
  compile 'org.apache.commons:commons-math3:3.4.1'

  // rss
  compile 'com.rometools:rome:1.5.0'

  compile "io.springfox:springfox-swagger2:2.6.1"
  compile "io.springfox:springfox-swagger-ui:2.6.1"

}

